{"version":3,"sources":["media/new-post.png","media/sign-out.png","media/initials-sign.jpg","media/sign-up.png","media/sign-in.png","media/project-logo.jpg","media/leafs.jpg","components/layout/SignedInLinks.js","store/actions/authActions/signOutAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/posts/PostSummary.js","components/posts/PostsList.js","components/dashboard/Dashboard.js","components/posts/PostDetails.js","components/auth/SignIn.js","store/actions/authActions/signInAction.js","components/auth/SignUp.js","store/actions/authActions/signUpAction.js","store/actions/postActions.js","components/posts/CreatePost.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js","media/form1.png"],"names":["module","exports","connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","id","to","src","NewPost","alt","onClick","SignOut","InitialsSign","profile","initials","SignedOutLinks","SignUp","SignIn","state","firebase","links","uid","className","ProjectLogo","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","PostSummary","post","title","authFirstName","authLastName","createdAt","calendar","PostsList","posts","Dashboard","this","Plant","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","post_id","data","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","SigninForm","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","firstName","lastName","signUp","SignUpForm","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createPost","authId","add","Date","CreatePost","history","push","App","exact","path","component","PostDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","initState","authReducer","action","message","postReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.54389f40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/new-post.8979a364.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-out.c52df44b.png\";","module.exports = __webpack_public_path__ + \"static/media/initials-sign.b213dd04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sign-up.436d141f.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-in.fd815b7e.png\";","module.exports = __webpack_public_path__ + \"static/media/project-logo.67099229.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leafs.77f29f12.jpg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions/signOutAction';\nimport NewPost from '../../media/new-post.png';\nimport SignOut from '../../media/sign-out.png';\nimport InitialsSign from '../../media/initials-sign.jpg';\nimport '../../styles/signedInLinks.scss';\n\nconst SignedInLinks = (props) => {\n    return(\n    <ul> \n        <li id='newPost'><NavLink to='/create'><img src={NewPost} alt=\"\"/></NavLink></li>\n        <li><NavLink onClick={props.signOut}><img src={SignOut} alt=\"\"/></NavLink></li>\n        <div id=\"initials\">\n        <img src={InitialsSign} alt=\"\"/>\n        <div id=\"centered\"><NavLink to='/'>{props.profile.initials}</NavLink></div>\n        </div>\n    </ul>\n    )\n}\n\nconst mapDispatch = dispatch => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatch)(SignedInLinks);","export const signOut = () => {\n    return ( dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        })\n    }\n}","// This component is responsible for:\n// The layout when signed out (what the user see).\n\n// Exported to: Navbar.js\n\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import WelcomeText from './WelcomeText'\nimport SignUp from '../../media/sign-up.png';\nimport SignIn from '../../media/sign-in.png';\n// import WelcomeText from '../../media/welcome-text.jpg';\n\nconst SignedOutLinks = () => {\n    return(\n    <ul>\n        <li><NavLink to='/signup'><img src={SignUp} alt=\"\"/></NavLink></li>\n        <li><NavLink to='/signin'><img src={SignIn} alt=\"\"/></NavLink></li>\n    {/* <WelcomeText /> */}\n    {/* <div id=\"welcome-text\">\n        <img src={WelcomeText} alt=\"\"/>\n    </div> */}\n    </ul>\n\n    )\n}\n\nexport default SignedOutLinks;","// This component is responsible for:\n// The navigation bar.\n\n// Exported to: App.js\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport '../../styles/navbar.scss';\nimport ProjectLogo from '../../media/project-logo.jpg';\n\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    // console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n    return (\n        <nav className=\"myNav\">\n            <div id=\"logo\">\n                <img src={ProjectLogo} alt=\"\" />\n                <div id=\"centered\"><Link to='/'>Posts Manager</Link></div>\n            </div>\n            {links}\n        </nav>\n    )\n}\n\nconst mapState = state => {\n    // console.log('Navbar state', state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapState)(Navbar);","import React from 'react';\nimport moment from 'moment';\nimport '../../styles/notifications.scss';\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n    return(\n          <div id='notifications'>\n          <h1>Notifications</h1>\n          <ul>\n            { notifications && notifications.map(item => {\n              return (\n                <li key={item.id}>\n                  <span id='notif-user'>{item.user } </span>\n                  <span id='notif-content'> {item.content}</span>\n                  <div id='notif-date'>\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              )\n            }) }\n          </ul>\n    </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\nimport '../../styles/postSummary.scss';\n\nconst PostSummary = ({post}) => {\n    return(\n        <div className=\"post-summary\">\n                <h1 className=\"post-title\" key={post.id}>{post.title}</h1>\n                <p className='posted-by'>Posted by {post.authFirstName} {post.authLastName} </p>\n                <p className=\"post-date\"> {moment(post.createdAt.toDate()).calendar()} </p>\n        </div>\n    )\n}\n\nexport default PostSummary;","import React from 'react';\nimport PostSummary from './PostSummary';\nimport { Link } from 'react-router-dom';\nimport '../../styles/postsList.scss';\n\nconst PostsList = ({ posts }) => {\n    return (\n        <div id='posts-list'>\n            {posts && posts.map(post => {\n                return (\n                    <Link to={'/post/' + post.id} key={post.id} >\n                        <PostSummary post={post} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default PostsList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport PostsList from '../posts/PostsList';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport '../../styles/dashboard.scss';\nimport Plant from '../../media/leafs.jpg';\n\n\nclass Dashboard extends Component {\n    render() {\n        // console.log(this.props)\n        const { posts, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div id='dashboard'>\n                <div>\n                    <PostsList posts={posts} />\n                </div>\n                <img src={Plant} alt=\"\"/>\n                <div>\n                    <Notifications notifications={notifications} />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapState = state => {\n    // console.log(state);\n    return {\n        posts: state.firestore.ordered.posts,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapState),\n    firestoreConnect([\n        { collection: 'posts', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard);\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport '../../styles/postDetails.scss';\n\nconst PostDetails = (props) => {\n  const { post, auth } = props;\n  // console.log('props', props);\n\n  if(!auth.uid) return <Redirect to='/signin' />\n\n  if (post) {\n    return (\n      <div className=\"post-details\">\n        <div className=\"content\">\n          <h1>{post.title}</h1>\n          <h3>{post.content}</h3>\n        </div>\n        <div className=\"post-auth\">\n          <div>Posted by {post.authFirstName} {post.authLastName}</div>\n          <p>{moment(post.createdAt.toDate()).calendar()}</p>\n        </div>\n    </div>\n    )\n  } else {\n    return (\n      <p>Loading post...</p>\n      )\n  }\n  \n}\n\nconst mapState = (state, ownProps) => {\n  // console.log('state', state);\n  const id = ownProps.match.params.post_id;\n  const posts = state.firestore.data.posts;\n  const post = posts ? posts[id] : null;\n  return {\n    post: post,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapState),\n  firestoreConnect([\n    { collection: 'posts' }\n  ])\n)(PostDetails)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions/signInAction';\nimport { Redirect } from 'react-router-dom';\nimport SigninForm from '../../media/form1.png';\nimport '../../styles/signin.scss';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div id=\"sign-container\">\n      <img src={SigninForm} alt=\"\"/>\n        <form id='signin-form' onSubmit={this.handleSubmit}>\n          <h3>SIGN IN</h3>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button>Sign in</button>\n            <div id='signin-err'>\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapState = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    signIn: credentials => dispatch(signIn(credentials))\n  }\n}\n\nexport default connect(mapState, mapDispatch)(SignIn);","export const signIn = credentials => {\n    return ( dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch(err => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n    }\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions/signUpAction';\nimport SignUpForm from '../../media/form1.png';\n\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n       <div id=\"sign-container\">\n      <img src={SignUpForm} alt=\"\"/>\n        <form id='signin-form' onSubmit={this.handleSubmit}>\n          <h3>SIGN UP</h3>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">Last Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              {authError ? <p> {authError} </p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n     \n    )\n  }\n}\n\nconst mapState = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapState, mapDispatch)(SignUp);","export const signUp = (newUser) => {\n    return ( dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then(resp => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            }).then(() => {\n                dispatch({ type: 'SIGNUP_SUCCESS'})\n            }).catch(err => {\n                dispatch({ type: 'SIGNUP_ERROR', err})\n            })\n        })\n    }\n}","export const createPost = post => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authId = getState().firebase.auth.uid;\n        firestore.collection('posts').add({\n            ...post,\n            authFirstName: profile.firstName,\n            authLastName: profile.lastName,\n            authId: authId,\n            createdAt: new Date()\n        }).then(post => {\n            dispatch({type: 'CREATE_POST', post })\n        }).catch(err => {\n            dispatch({type: 'CREATE_POST_ERR', err })\n        })\n        \n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createPost } from '../../store/actions/postActions';\nimport { Redirect } from 'react-router-dom';\nimport SigninForm from '../../media/form1.png';\nimport '../../styles/createPost.scss';\n\nclass CreatePost extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createPost(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if(!auth.uid) return <Redirect to='/signin' />\n    \n    return (\n      <div id=\"create-post\">\n      <img src={SigninForm} alt=\"\"/>\n        <form onSubmit={this.handleSubmit}>\n          <h3>Create new post</h3>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Post content</label>\n           <textarea id=\"content\" onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button>Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapState = state => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    createPost: post => dispatch(createPost(post))\n  }\n}\n\nexport default connect(mapState, mapDispatch)(CreatePost);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PostDetails from './components/posts/PostDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreatePost from './components/posts/CreatePost';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreatePost} />\n          <Route path='/post/:post_id' component={PostDetails} />\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login failed, please try again!'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('Login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","const initState = {\n    posts: [\n        { id: '1', title: 'xxxx', content: 'yyyyyyyyyyyyy yyyyyyyyyyy yyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy' },\n        { id: '2', title: 'xxxx', content: 'yyyyyyyyyyyyy yyyyyyyyyyy yyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy' },\n        { id: '3', title: 'xxxx', content: 'yyyyyyyyyyyyy yyyyyyyyyyy yyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy' }\n    ]\n}\n\nconst postReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_POST':\n            console.log('created post', action.post);\n            return state;\n        case 'CREATE_POST_ERR':\n            console.log('created post error', action.err)\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default postReducer;","import authReducer from './authReducer';\nimport postReducer from './postReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    post: postReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC1HduecZdrc4_-5XnQ9OQR7ug5GouVoAQ\",\n    authDomain: \"posts-manager-app.firebaseapp.com\",\n    databaseURL: \"https://posts-manager-app.firebaseio.com\",\n    projectId: \"posts-manager-app\",\n    storageBucket: \"posts-manager-app.appspot.com\",\n    messagingSenderId: \"389730848597\",\n    appId: \"1:389730848597:web:12be279914396555\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/form1.3a1b02c1.png\";"],"sourceRoot":""}